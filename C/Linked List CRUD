#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include <stdbool.h>
struct node {
    int ID;
    char studentName[50];
    int studentGrade;
    struct node *next;
};

void insert(struct node **headRef) {
    int ID, studentGrade;
    char studentName[50];
    struct node *newNode = (struct node *) malloc(sizeof(struct node));
    if (newNode == NULL) {
        printf("Memory is not created");
    }
    printf("Enter student name: ");
    scanf("%s", &studentName);
    printf("Enter student ID");
    scanf("%d", &ID);
    printf("Enter student grade: ");
    scanf("%d", &studentGrade);

    newNode->ID = ID;
    strcpy(newNode->studentName, studentName);
    newNode->studentGrade = studentGrade;
    newNode->next = (*headRef);
    (*headRef) = newNode;
}

void printList(struct node *headRef) {
    while (headRef != NULL) {
        printf("%s", headRef->studentName);
        printf("%d", headRef->ID);
        printf("%d", headRef->studentGrade);
        headRef = headRef->next;
    }
}

bool search(struct node *head, int checkID) {
    if (head == NULL) {
        return false;
    }

    if (head->ID == checkID) {
        return true;
    }

    return search(head->next, checkID);
}

int main() {
    int checkID;
    int menu;
    int i = 0;
    char con = 'y';
    struct node *head = (struct Node *) malloc(sizeof(struct node));
    if (head == NULL) {
        printf("Memory is not created");
    }
    do {
        printf("Menu: \n");
        printf("1.) Insert\n");
        printf("2.) List\n");
        printf("3.) Search\n");
        printf("4.) Delete\n");
        printf("5.) Exit\n");
        scanf("%d", &menu);
        printf("\n\n");

        switch (menu) {
            case 1:
                do {
                    insert(&head);
                    printf("Do you want to continue [Y]/[N]");
                    scanf(" %c", &con);
                } while (con == 'y' || con == 'Y');
                break;
            case 2:
                printf("List\n");
                printList(head);
                break;
            case 3:
                printf("Search\n");
                printf("Enter ID: ");
                scanf("%d", &checkID);
                search(head, checkID)? printf("ID found") : printf("ID not found");
                break;
            case 4:
                printf("Delete\n");
                break;
            case 5:
                printf("Exit\n");
                break;
            default:
                printf("Default!");
        }
    } while (menu != 5);

    return 0;
}
